var n=require("vscode"),e=require("fs"),c=require("path"),h="update-versions.json";function g(){let t="YourPublisherName.update-versions",i=n.extensions.getExtension(t);if(i)return i.extensionPath;throw new Error(`Extension with ID '${t}' is not installed.`)}async function x(){let t=n.workspace.rootPath,i=g(),r=c.join(i,h);if(t){let s=c.join(t,"android","build.gradle"),a=c.join(t,"android","gradle","wrapper","gradle-wrapper.properties"),o={};if(e.existsSync(r)){let d=e.readFileSync(r,"utf8");o=await JSON.parse(d)}let p=o.desiredKotlinVersion||await n.window.showInputBox({prompt:"Enter desired Kotlin version"}),u=o.desiredGradleVersion||await n.window.showInputBox({prompt:"Enter desired Gradle version"}),w=o.desiredGradleDistributionUrl||await n.window.showInputBox({prompt:"Enter desired Gradle distribution URL"});if(e.existsSync(s)){let l=e.readFileSync(s,"utf8").replace(/ext\.kotlin_version = .+/,`ext.kotlin_version = "${p}"`).replace(/classpath 'com.android.tools.build:gradle:.+/,`classpath 'com.android.tools.build:gradle:${u}'`);e.writeFileSync(s,l)}if(e.existsSync(a)){let l=e.readFileSync(a,"utf8").replace(/distributionUrl=.+/,`distributionUrl=${w}`);e.writeFileSync(a,l)}let f={desiredKotlinVersion:p,desiredGradleVersion:u,desiredGradleDistributionUrl:w};e.writeFileSync(r,JSON.stringify(f,null,2)),n.window.showInformationMessage("Version update completed.")}else n.window.showErrorMessage("No folder is opened in VS Code.")}function b(t){let i=n.commands.registerCommand("extension.updateVersions",x);t.subscriptions.push(i)}exports.activate=b;function m(){}exports.deactivate=m;
